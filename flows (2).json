[
    {
        "id": "2d027d09fe0e5b17",
        "type": "tab",
        "label": "Weather Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9dfb2194599a53f6",
        "type": "mqtt in",
        "z": "2d027d09fe0e5b17",
        "name": "MQTT weather/station_data",
        "topic": "weather/station_data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1498bfb91f583e3e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 670,
        "y": 420,
        "wires": [
            [
                "0642a4e0a34bb11e",
                "aada84843fdfc57f"
            ]
        ]
    },
    {
        "id": "0642a4e0a34bb11e",
        "type": "function",
        "z": "2d027d09fe0e5b17",
        "name": "Parse MQTT JSON & Add Timestamp",
        "func": "// Terima payload\nlet data = msg.payload;\n\n// Log the raw payload for debugging\nnode.debug(\"Received MQTT payload: \" + JSON.stringify(data));\n\n// Jika payload adalah buffer, konversi ke string\nif (Buffer.isBuffer(data)) {\n    data = data.toString('utf8');\n    node.debug(\"Converted buffer to string: \" + data);\n}\n\n// Jika payload adalah string, parse ke JSON\nif (typeof data === 'string') {\n    try {\n        data = JSON.parse(data);\n    } catch (e) {\n        node.error(\"Failed to parse MQTT JSON: \" + e.message + \" | Payload: \" + data, msg);\n        return null; // Stop processing if JSON is invalid\n    }\n}\n\n// Pastikan data adalah objek dan bukan null\nif (typeof data !== 'object' || data === null) {\n    node.warn(\"Received non-object or null MQTT data: \" + typeof data, msg);\n    return null; // Stop processing if data is not an object\n}\n\n// Fungsi helper untuk parse float atau return null jika NaN/undefined/null\nconst parseFloatOrNull = (val) => {\n    if (typeof val === 'string' && (val.toLowerCase() === 'null' || val.toLowerCase() === 'undefined')) {\n        return null;\n    }\n    if (val === null || val === undefined) {\n        return null;\n    }\n    const num = parseFloat(val);\n    return isNaN(num) ? null : num;\n};\n\n// Konversi pressure dari Pa ke hPa\nconst convertPressureToHpa = (pressurePa) => {\n    const pressure = parseFloatOrNull(pressurePa);\n    return pressure !== null ? pressure / 100 : null;\n};\n\n// Map rain_value to 0 if rain_status is \"Kering\" or rain_value is 4095\nconst processRainValue = (rainValue, rainStatus) => {\n    const value = parseFloatOrNull(rainValue);\n    if (rainStatus === \"Kering\" || value === 4095) {\n        return 0; // Map to 0 mm/h for \"Kering\"\n    }\n    return value;\n};\n\n// Buat objek payload baru dengan nilai yang divalidasi dan di-parse\ntry {\n    msg.payload = {\n        timestamp: new Date().toISOString(), // UTC timestamp\n        temperature: parseFloatOrNull(data.temperature || null),\n        humidity: parseFloatOrNull(data.humidity || null),\n        heat_index: parseFloatOrNull(data.heat_index || null),\n        wind_speed_mps: parseFloatOrNull(data.wind_speed_mps || null),\n        wind_direction: parseFloatOrNull(data.wind_direction || null),\n        rain_value: processRainValue(data.rain_value || null, data.rain_status || null),\n        pm25: parseFloatOrNull(data.pm25 || null),\n        pressure: convertPressureToHpa(data.pressure || null)\n    };\n\n    // Log the processed payload for debugging\n    node.debug(\"Processed MQTT payload: \" + JSON.stringify(msg.payload));\n\n    return msg;\n} catch (e) {\n    node.error(\"Error processing MQTT data: \" + e.message, msg);\n    return null; // Stop processing if an error occurs\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 5,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 420,
        "wires": [
            [
                "d97e27e87f1dd588",
                "d14b2e85680ed596"
            ]
        ]
    },
    {
        "id": "d97e27e87f1dd588",
        "type": "change",
        "z": "2d027d09fe0e5b17",
        "name": "Store Latest Data in Flow Context",
        "rules": [
            {
                "t": "set",
                "p": "latestWeatherData",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "d14b2e85680ed596",
        "type": "websocket out",
        "z": "2d027d09fe0e5b17",
        "name": "WS out /ws/weather",
        "server": "7e3e0898da3593ac",
        "client": "",
        "x": 1300,
        "y": 460,
        "wires": []
    },
    {
        "id": "55b888c6746c379a",
        "type": "http in",
        "z": "2d027d09fe0e5b17",
        "name": "GET /api/weather/current",
        "url": "/api/weather/current",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 660,
        "y": 560,
        "wires": [
            [
                "1578fcaa9ae7b1a4"
            ]
        ]
    },
    {
        "id": "1578fcaa9ae7b1a4",
        "type": "change",
        "z": "2d027d09fe0e5b17",
        "name": "Get Latest Data from Flow Context",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "latestWeatherData",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 560,
        "wires": [
            [
                "605cc9387845cd55"
            ]
        ]
    },
    {
        "id": "605cc9387845cd55",
        "type": "http response",
        "z": "2d027d09fe0e5b17",
        "name": "Current API Response",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 1250,
        "y": 560,
        "wires": []
    },
    {
        "id": "d17e163194787513",
        "type": "http in",
        "z": "2d027d09fe0e5b17",
        "name": "GET /cuaca",
        "url": "/cuaca",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "c356d0cf24d277d7"
            ]
        ]
    },
    {
        "id": "c356d0cf24d277d7",
        "type": "template",
        "z": "2d027d09fe0e5b17",
        "name": "Main Weather Page HTML/CSS/JS",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>CloudNex Weather Station Dashboard</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap\"\n        rel=\"stylesheet\">\n    <!-- Added Font Awesome CSS for icons -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\">\n    <style>\n        :root {\n            --primary-color: #6366f1;\n            --secondary-color: #4f46e5;\n            --background-color: #06283d;\n            --card-background: #dff6ff;\n            --text-primary: #06283d;\n            --text-secondary: #94a3b8;\n            --text-accent: #818cf8;\n            --border-radius: 16px;\n            --sidebar-width: 240px;\n        }\n\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Poppins', sans-serif;\n        }\n\n        body {\n            background-color: var(--background-color);\n            color: #ffffff;\n            overflow-x: hidden;\n        }\n\n        .dashboard-container {\n            display: flex;\n            min-height: 100vh;\n        }\n\n        /* --- Sidebar Styling (Updated to Match Code 2) --- */\n        .sidebar {\n            width: var(--sidebar-width);\n            background-color: var(--card-background);\n            padding: 20px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            position: fixed;\n            top: 0;\n            left: 0;\n            height: 100vh;\n            flex-shrink: 0;\n            /* Added to match Code 2 */\n        }\n\n        .logo {\n            margin-bottom: 40px;\n            text-align: center;\n        }\n\n        .logo img {\n            width: 180px;\n            height: auto;\n        }\n\n        .nav-items {\n            width: 100%;\n            margin-top: 20px;\n            /* Added to match Code 2 */\n        }\n\n        .nav-item {\n            display: flex;\n            align-items: center;\n            width: 100%;\n            padding: 12px 15px;\n            margin-bottom: 10px;\n            border-radius: 8px;\n            color: var(--text-primary);\n            text-decoration: none;\n            transition: background-color 0.3s;\n        }\n\n        .nav-item.active {\n            background-color: rgba(6, 40, 61, 0.1);\n            font-weight: 500;\n        }\n\n        .nav-item:hover:not(.active) {\n            background-color: rgba(6, 40, 61, 0.1);\n        }\n\n        .nav-icon {\n            margin-right: 12px;\n            width: 20px;\n            height: 20px;\n            stroke: var(--text-primary);\n            fill: none;\n            /* Added to match Code 2 */\n            stroke-width: 2;\n            /* Added to match Code 2 */\n            stroke-linecap: round;\n            /* Added to match Code 2 */\n            stroke-linejoin: round;\n            /* Added to match Code 2 */\n            flex-shrink: 0;\n        }\n\n        .main-content {\n            flex: 1;\n            padding: 30px;\n            background-color: var(--background-color);\n            margin-left: var(--sidebar-width);\n        }\n\n        .header {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 40px;\n        }\n\n        .date-section h1 {\n            font-size: 36px;\n            font-weight: 700;\n        }\n\n        .date-section p {\n            color: var(--text-secondary);\n            font-size: 16px;\n        }\n\n        .station-info {\n            text-align: right;\n        }\n\n        .station-info h1 {\n            font-size: 32px;\n            font-weight: 700;\n        }\n\n        .station-info p {\n            color: var(--text-secondary);\n            font-size: 16px;\n        }\n\n        .section-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 20px;\n        }\n\n        .section-header h2 {\n            font-size: 24px;\n            font-weight: 600;\n        }\n\n        .section-header a {\n            color: var(--text-secondary);\n            text-decoration: none;\n            font-size: 14px;\n        }\n\n        .section-header a:hover {\n            color: #ffffff;\n        }\n\n        .weather-cards {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n\n        .weather-card {\n            background-color: var(--card-background);\n            border-radius: var(--border-radius);\n            padding: 20px;\n            color: var(--text-primary);\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n\n        .weather-card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2);\n        }\n\n        .card-title {\n            font-size: 16px;\n            margin-bottom: 10px;\n            display: flex;\n            align-items: center;\n        }\n\n        .card-title i {\n            margin-right: 10px;\n            font-size: 1.2rem;\n        }\n\n        .card-value {\n            font-size: 32px;\n            font-weight: 700;\n        }\n\n        .card-value.loading::after {\n            content: \"...\";\n        }\n\n        .map-container {\n            width: 100%;\n            height: 300px;\n            border-radius: var(--border-radius);\n            overflow: hidden;\n            margin-bottom: 30px;\n        }\n\n        .map-container iframe {\n            width: 100%;\n            height: 100%;\n            border: none;\n        }\n\n        .forecast-panel {\n            width: 350px;\n            background: linear-gradient(135deg, var(--card-background), var(--background-color));\n            padding: 30px;\n        }\n\n        .forecast-header {\n            margin-bottom: 20px;\n        }\n\n        .forecast-header h2 {\n            font-size: 24px;\n            font-weight: 600;\n            margin-bottom: 15px;\n        }\n\n        .search-box {\n            position: relative;\n        }\n\n        .search-box input {\n            width: 100%;\n            padding: 10px 15px;\n            padding-right: 40px;\n            background-color: rgba(255, 255, 255, 0.2);\n            border: none;\n            border-radius: 20px;\n            color: #ffffff;\n            font-size: 14px;\n        }\n\n        .search-box input::placeholder {\n            color: rgba(255, 255, 255, 0.7);\n        }\n\n        .search-box button {\n            position: absolute;\n            right: 15px;\n            top: 50%;\n            transform: translateY(-50%);\n            background: none;\n            border: none;\n            color: #ffffff;\n            cursor: pointer;\n        }\n\n        .forecast-items {\n            display: flex;\n            flex-direction: column;\n            gap: 15px;\n            margin-top: 30px;\n        }\n\n        .forecast-item {\n            background-color: rgba(223, 246, 255, 0.1);\n            border-radius: var(--border-radius);\n            padding: 15px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n\n        .forecast-time-container {\n            display: flex;\n            flex-direction: column;\n        }\n\n        .forecast-day {\n            font-weight: 500;\n        }\n\n        .forecast-time {\n            color: var(--text-secondary);\n            font-size: 14px;\n        }\n\n        .forecast-icon {\n            width: 40px;\n            height: 40px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .forecast-icon img {\n            width: 100%;\n            height: 100%;\n        }\n\n        .forecast-temp-container {\n            text-align: right;\n        }\n\n        .forecast-temp {\n            font-size: 28px;\n            font-weight: 700;\n        }\n\n        .forecast-condition {\n            color: var(--text-secondary);\n            font-size: 14px;\n        }\n\n        @media (max-width: 1200px) {\n            .dashboard-container {\n                flex-direction: column;\n            }\n\n            .sidebar {\n                position: static;\n                width: 100%;\n                height: auto;\n                flex-direction: row;\n                justify-content: space-between;\n                padding: 15px;\n                overflow-y: visible;\n                /* Added to match Code 2 */\n            }\n\n            .main-content {\n                margin-left: 0;\n                padding: 20px;\n            }\n\n            .forecast-panel {\n                width: 100%;\n            }\n\n            .weather-cards {\n                grid-template-columns: repeat(2, 1fr);\n            }\n\n            .logo img {\n                width: 120px;\n            }\n\n            .nav-items {\n                width: auto;\n                margin-top: 0;\n                /* Adjusted to match Code 2 */\n            }\n\n            .nav-item {\n                margin-right: 5px;\n                margin-bottom: 0;\n                /* Added to match Code 2 */\n            }\n        }\n\n        @media (max-width: 768px) {\n            .header {\n                flex-direction: column;\n                gap: 15px;\n            }\n\n            .station-info {\n                text-align: left;\n            }\n\n            .weather-cards {\n                grid-template-columns: 1fr;\n            }\n\n            .logo img {\n                width: 100px;\n            }\n\n            .nav-items {\n                font-size: 0;\n            }\n\n            .nav-item span {\n                display: none;\n            }\n\n            .nav-icon {\n                margin-right: 0;\n            }\n\n            .nav-item {\n                padding: 8px 10px;\n            }\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"dashboard-container\">\n        <!-- Sidebar -->\n        <div class=\"sidebar\">\n            <div class=\"logo\">\n                <img src=\"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Weather%20Station%20Dashboard.jpg-hYlNXdOXcA0yAHPry60kUI7nsy6Z5h.jpeg\" alt=\"CloudNex Logo\">\n            </div>\n            <div class=\"nav-items\">\n                <a href=\"/cuaca\" class=\"nav-item active\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                        <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n                    </svg>\n                    Dashboard\n                </a>\n                <a href=\"/lingkungan\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"></path>\n                    </svg>\n                    Environmental Monitoring\n                </a>\n                <a href=\"/histori\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M3 3v18h18\"></path>\n                        <path d=\"m19 9-5 5-4-4-3 3\"></path>\n                    </svg>\n                    Historical Data\n                </a>\n                <a href=\"/about-us\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n                        <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\n                        <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\n                        <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\n                    </svg>\n                    <span>About Us</span>\n                </a>\n            </div>\n        </div>\n        <!-- Main Content -->\n        <div class=\"main-content\">\n            <!-- Header -->\n            <div class=\"header\">\n                <div class=\"date-section\">\n                    <h1 id=\"current-month-year\">April 2025</h1>\n                    <p id=\"current-date\">Friday, April 25, 2025</p>\n                </div>\n                <div class=\"station-info\">\n                    <h1>WEATHER STATION</h1>\n                    <p>UNIVERSITAS PRASETIYA MULYA</p>\n                </div>\n            </div>\n            <!-- Today Overview -->\n            <div class=\"section-header\">\n                <h2>Today Overview</h2>\n                <a href=\"/lingkungan\">More Detail ›</a>\n            </div>\n            <div class=\"weather-cards\">\n                <!-- Temperature Card -->\n                <div class=\"weather-card\">\n                    <div class=\"card-title\">\n                        <i class=\"fas fa-temperature-high\"></i>\n                        Temperature\n                    </div>\n                    <div class=\"card-value loading\" id=\"temperature\">29 °C</div>\n                </div>\n                <!-- Humidity Card -->\n                <div class=\"weather-card\">\n                    <div class=\"card-title\">\n                        <i class=\"fas fa-droplet\"></i>\n                        Humidity\n                    </div>\n                    <div class=\"card-value loading\" id=\"humidity\">29 %</div>\n                </div>\n                <!-- Air Particle Card -->\n                <div class=\"weather-card\">\n                    <div class=\"card-title\">\n                        <i class=\"fas fa-smog\"></i>\n                        Air Particle\n                    </div>\n                    <div class=\"card-value loading\" id=\"airParticle\">29 μg/m³</div>\n                </div>\n                <!-- Wind Direction Card -->\n                <div class=\"weather-card\">\n                    <div class=\"card-title\">\n                        <i class=\"fas fa-compass\"></i>\n                        Wind Direction\n                    </div>\n                    <div class=\"card-value loading\" id=\"windDirection\">North</div>\n                </div>\n                <!-- Wind Speed Card -->\n                <div class=\"weather-card\">\n                    <div class=\"card-title\">\n                        <i class=\"fas fa-wind\"></i>\n                        Wind Speed\n                    </div>\n                    <div class=\"card-value loading\" id=\"windSpeed\">100 m/s</div>\n                </div>\n                <!-- Pressure Card -->\n                <div class=\"weather-card\">\n                    <div class=\"card-title\">\n                        <i class=\"fas fa-gauge-high\"></i>\n                        Pressure\n                    </div>\n                    <div class=\"card-value loading\" id=\"pressure\">100 hPa</div>\n                </div>\n            </div>\n            <!-- Map -->\n            <div class=\"map-container\">\n                <iframe\n                    src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3965.7798247799513!2d106.6374011!3d-6.3003877!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x2e69fb51fc0750cf%3A0xede1a61444482883!2sUniversitas%20Prasetiya%20Mulya!5e0!3m2!1sen!2sid!4v1698765432109!5m2!1sen!2sid\"\n                    allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n            </div>\n        </div>\n        <!-- Forecast Panel -->\n        <div class=\"forecast-panel\">\n            <div class=\"forecast-header\">\n                <h2>Weather Forecast</h2>\n                <div class=\"search-box\">\n                    <input type=\"text\" id=\"locationInput\" placeholder=\"Search location here...\" onkeypress=\"if(event.key === 'Enter') debounceFetchForecast()\">\n                    <button onclick=\"debounceFetchForecast()\">\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                            <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n                        </svg>\n                    </button>\n                </div>\n            </div>\n            <div class=\"forecast-items\" id=\"forecastItems\">\n                <div class=\"forecast-item\">\n                    <div class=\"forecast-day\">Enter a location to see forecast...</div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <script>\n        // --- MQTT Data and Other Functions (Unchanged) ---\n        const mqttData = {\n            dht_status: \"ok\",\n            temperature: \"23.0\",\n            humidity: \"70.5\",\n            heat_index: \"23.2\",\n            bmp_status: \"ok\",\n            bmp_temperature: \"24.2\",\n            pressure: \"99977.8\",\n            altitude: \"112.8\",\n            wind_speed_mps: \"0.0\",\n            wind_speed_kph: \"0.0\",\n            rotations: \"0.0\",\n            wind_direction: \"90.0\",\n            rain_value: \"4095\",\n            rain_status: \"Kering\",\n            pm25: \"127\"\n        };\n        function formatValue(value, decimals = 1, unit = '', defaultValue = '--') {\n            const num = parseFloat(value);\n            if (isNaN(num) || value === null || value === undefined) {\n                return `${defaultValue} ${unit}`.trim();\n            }\n            return `${num.toFixed(decimals)} ${unit}`.trim();\n        }\n        function getWindDirectionInfo(degrees) {\n            const val = parseFloat(degrees);\n            if (isNaN(val) || val === null || val === undefined) return { code: '--', name: '--' };\n            const directions = ['North', 'Northeast', 'East', 'Southeast', 'South', 'Southwest', 'West', 'Northwest'];\n            const codes = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n            const normalizedDegrees = ((val % 360) + 360) % 360;\n            const index = Math.round(normalizedDegrees / 45) % 8;\n            return {\n                code: codes[index],\n                name: directions[index]\n            };\n        }\n        function updateElement(id, value, isLoading = false) {\n            const element = document.getElementById(id);\n            if (!element) return;\n            if (isLoading) {\n                element.classList.add('loading');\n                const currentText = element.textContent || '';\n                const unit = currentText.split(' ').pop() || '';\n                element.textContent = `-- ${unit}`.trim();\n            } else {\n                element.classList.remove('loading');\n                element.textContent = value;\n            }\n        }\n        function updateDateTime() {\n            const now = new Date();\n            const dateOptions = { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' };\n            const monthYearOptions = { month: 'long', year: 'numeric' };\n            updateElement('current-date', now.toLocaleDateString('en-US', dateOptions));\n            updateElement('current-month-year', now.toLocaleDateString('en-US', monthYearOptions));\n        }\n        function displayMQTTData() {\n            updateElement('temperature', formatValue(mqttData.temperature, 1, '°C'));\n            updateElement('humidity', formatValue(mqttData.humidity, 1, '%'));\n            updateElement('airParticle', formatValue(mqttData.pm25, 1, 'μg/m³'));\n            const windDirInfo = getWindDirectionInfo(mqttData.wind_direction);\n            updateElement('windDirection', `${windDirInfo.code} (${windDirInfo.name})`);\n            updateElement('windSpeed', formatValue(mqttData.wind_speed_mps, 1, 'm/s'));\n            const pressureInHpa = parseFloat(mqttData.pressure) / 100;\n            updateElement('pressure', formatValue(pressureInHpa, 1, 'hPa'));\n        }\n        function debounce(func, wait) {\n            let timeout;\n            return function executedFunction(...args) {\n                const later = () => {\n                    clearTimeout(timeout);\n                    func(...args);\n                };\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n            };\n        }\n        function loadDataFromLocalStorage() {\n            const storedData = localStorage.getItem('weatherData');\n            if (storedData) {\n                try {\n                    const data = JSON.parse(storedData);\n                    updateElement('temperature', formatValue(data.temperature, 1, '°C'));\n                    updateElement('humidity', formatValue(data.humidity, 1, '%'));\n                    updateElement('airParticle', formatValue(data.pm25, 1, 'μg/m³'));\n                    const windDirInfo = getWindDirectionInfo(data.wind_direction);\n                    updateElement('windDirection', `${windDirInfo.code} (${windDirInfo.name})`);\n                    updateElement('windSpeed', formatValue(data.wind_speed_mps, 1, 'm/s'));\n                    updateElement('pressure', formatValue(data.pressure, 1, 'hPa'));\n                } catch (error) {\n                    console.error('Error loading data from localStorage:', error);\n                }\n            }\n        }\n        function saveDataToLocalStorage(data) {\n            try {\n                localStorage.setItem('weatherData', JSON.stringify(data));\n            } catch (error) {\n                console.error('Error saving data to localStorage:', error);\n            }\n        }\n        let socket;\n        let reconnectInterval = 5000;\n        let reconnectTimer;\n        let connectionAttempts = 0;\n        const maxConnectionAttempts = 5;\n        function connectWebSocket() {\n            const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n            const wsUrl = `${wsProtocol}//${window.location.host}/ws/weather`;\n            console.log(`Attempting to connect WebSocket: ${wsUrl} (Attempt ${connectionAttempts + 1}/${maxConnectionAttempts})`);\n            socket = new WebSocket(wsUrl);\n            socket.onopen = () => {\n                console.log('WebSocket connected successfully');\n                connectionAttempts = 0;\n                clearTimeout(reconnectTimer);\n            };\n            socket.onmessage = (event) => {\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log('WebSocket received data:', data);\n                    saveDataToLocalStorage(data);\n                    updateElement('temperature', formatValue(data.temperature, 1, '°C'));\n                    updateElement('humidity', formatValue(data.humidity, 1, '%'));\n                    updateElement('airParticle', formatValue(data.pm25, 1, 'μg/m³'));\n                    const windDirInfo = getWindDirectionInfo(data.wind_direction);\n                    updateElement('windDirection', `${windDirInfo.code} (${windDirInfo.name})`);\n                    updateElement('windSpeed', formatValue(data.wind_speed_mps, 1, 'm/s'));\n                    updateElement('pressure', formatValue(data.pressure, 1, 'hPa'));\n                } catch (error) {\n                    console.error('Error processing WebSocket message:', error, 'Raw data:', event.data);\n                }\n            };\n            socket.onerror = (error) => {\n                console.error('WebSocket error:', error);\n                socket.close();\n            };\n            socket.onclose = (event) => {\n                console.log(`WebSocket disconnected. Code: ${event.code}, Reason: ${event.reason}`);\n                connectionAttempts++;\n                setAllCardsLoading(true);\n                if (connectionAttempts < maxConnectionAttempts) {\n                    console.log(`Retrying WebSocket connection in ${reconnectInterval / 1000}s... (${connectionAttempts}/${maxConnectionAttempts})`);\n                    clearTimeout(reconnectTimer);\n                    reconnectTimer = setTimeout(connectWebSocket, reconnectInterval);\n                } else {\n                    console.error(`Failed to connect after ${maxConnectionAttempts} attempts. Using fallback data.`);\n                    useFallbackData();\n                }\n            };\n        }\n        function setAllCardsLoading(isLoading) {\n            const ids = ['temperature', 'humidity', 'airParticle', 'windDirection', 'windSpeed', 'pressure'];\n            ids.forEach(id => updateElement(id, '', isLoading));\n        }\n        function useFallbackData() {\n            const fallbackData = {\n                temperature: 29,\n                humidity: 74.9,\n                pm25: 29,\n                wind_speed_mps: 4.17,\n                wind_direction: 225,\n                pressure: 1002\n            };\n            updateElement('temperature', formatValue(fallbackData.temperature, 1, '°C'));\n            updateElement('humidity', formatValue(fallbackData.humidity, 1, '%'));\n            updateElement('airParticle', formatValue(fallbackData.pm25, 1, 'μg/m³'));\n            const windDirInfo = getWindDirectionInfo(fallbackData.wind_direction);\n            updateElement('windDirection', `${windDirInfo.code} (${windDirInfo.name})`);\n            updateElement('windSpeed', formatValue(fallbackData.wind_speed_mps, 1, 'm/s'));\n            updateElement('pressure', formatValue(fallbackData.pressure, 1, 'hPa'));\n            document.querySelectorAll('.card-value').forEach(el => {\n                el.style.color = '#7986cb';\n            });\n        }\n        async function fetchInitialData() {\n            try {\n                const response = await fetch('/api/weather/current');\n                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n                const data = await response.json();\n                console.log('Fetched initial data:', data);\n                saveDataToLocalStorage(data);\n                updateElement('temperature', formatValue(data.temperature, 1, '°C'));\n                updateElement('humidity', formatValue(data.humidity, 1, '%'));\n                updateElement('airParticle', formatValue(data.pm25, 1, 'μg/m³'));\n                const windDirInfo = getWindDirectionInfo(data.wind_direction);\n                updateElement('windDirection', `${windDirInfo.code} (${windDirInfo.name})`);\n                updateElement('windSpeed', formatValue(data.wind_speed_mps, 1, 'm/s'));\n                updateElement('pressure', formatValue(data.pressure, 1, 'hPa'));\n            } catch (error) {\n                console.error('Error fetching initial data:', error);\n                setAllCardsLoading(true);\n            }\n        }\n        async function fetchForecast() {\n            const location = document.getElementById('locationInput').value.trim();\n            const forecastItems = document.getElementById('forecastItems');\n            forecastItems.innerHTML = '<div class=\"forecast-item\"><div class=\"forecast-day\">Loading forecast...</div></div>';\n            try {\n                const apiKey = 'efddee6b457d91e33a8e76357ffabddf';\n                let url;\n                if (!location) {\n                    const lat = -6.300339673496633;\n                    const lon = 106.63850614460307;\n                    url = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n                } else {\n                    url = `https://api.openweathermap.org/data/2.5/forecast?q=${encodeURIComponent(location)}&appid=${apiKey}&units=metric`;\n                }\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error('Location not found or API error');\n                }\n                const data = await response.json();\n                const forecastList = data.list.slice(0, 5);\n                const processedForecast = forecastList.map(item => {\n                    const date = new Date(item.dt * 1000);\n                    const day = date.toLocaleDateString('en-US', { weekday: 'long' });\n                    const time = date.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n                    const temp = Math.round(item.main.temp) + '°C';\n                    const condition = item.weather[0].description;\n                    const icon = `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`;\n                    return { day, time, temp, condition, icon };\n                });\n                forecastItems.innerHTML = '';\n                processedForecast.forEach(item => {\n                    const forecastItem = document.createElement('div');\n                    forecastItem.className = 'forecast-item';\n                    forecastItem.innerHTML = `\n                        <div class=\"forecast-time-container\">\n                            <div class=\"forecast-day\">${item.day}</div>\n                            <div class=\"forecast-time\">${item.time}</div>\n                        </div>\n                        <div class=\"forecast-icon\">\n                            <img src=\"${item.icon}\" alt=\"Weather icon\">\n                        </div>\n                        <div class=\"forecast-temp-container\">\n                            <div class=\"forecast-temp\">${item.temp}</div>\n                            <div class=\"forecast-condition\">${item.condition}</div>\n                        </div>\n                    `;\n                    forecastItems.appendChild(forecastItem);\n                });\n            } catch (error) {\n                forecastItems.innerHTML = `<div class=\"forecast-item\">\n                    <div class=\"forecast-day\">Error: ${error.message}</div>\n                </div>`;\n            }\n        }\n        const debounceFetchForecast = debounce(fetchForecast, 500);\n        document.addEventListener('DOMContentLoaded', () => {\n            updateDateTime();\n            setInterval(updateDateTime, 60000);\n            displayMQTTData();\n            loadDataFromLocalStorage();\n            fetchInitialData();\n            connectWebSocket();\n            fetchForecast();\n        });\n    </script>\n</body>\n\n</html>",
        "x": 840,
        "y": 260,
        "wires": [
            [
                "0e3d888c85fba2f4"
            ]
        ]
    },
    {
        "id": "0e3d888c85fba2f4",
        "type": "http response",
        "z": "2d027d09fe0e5b17",
        "name": "Main Page Response",
        "statusCode": "200",
        "headers": {
            "Content-Type": "text/html"
        },
        "x": 1100,
        "y": 260,
        "wires": []
    },
    {
        "id": "19861f98b28c1383",
        "type": "http in",
        "z": "2d027d09fe0e5b17",
        "name": "Root Redirect",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "619ce1d5146f99cf"
            ]
        ]
    },
    {
        "id": "619ce1d5146f99cf",
        "type": "change",
        "z": "2d027d09fe0e5b17",
        "name": "Set Redirect to /cuaca",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "302",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"Location\":\"/cuaca\",\"Content-Type\":\"text/html\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 180,
        "wires": [
            [
                "29c7c2d1156e3b02"
            ]
        ]
    },
    {
        "id": "29c7c2d1156e3b02",
        "type": "http response",
        "z": "2d027d09fe0e5b17",
        "name": "Send Redirect Response",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 180,
        "wires": []
    },
    {
        "id": "3f2f73eb08d9f28c",
        "type": "http in",
        "z": "2d027d09fe0e5b17",
        "name": "Environmental Monitoring",
        "url": "/lingkungan",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 640,
        "y": 340,
        "wires": [
            [
                "56f3f8e87e342133"
            ]
        ]
    },
    {
        "id": "56f3f8e87e342133",
        "type": "template",
        "z": "2d027d09fe0e5b17",
        "name": "Environmental Dashboard HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>CloudNex - Environmental Monitoring</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Crimson+Text:wght@700&family=Poppins:wght@400;500;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        /* ... CSS Umum ... */\n        * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Poppins', sans-serif; }\n        body { background-color: #06283d; color: #ffffff; overflow-x: hidden; display: flex; min-height: 100vh;} /* Tambah display flex */\n\n        /* --- Sidebar Styling Konsisten --- */\n        .sidebar { width: 240px; background-color: #dff6ff; padding: 20px; display: flex; flex-direction: column; align-items: center; position: fixed; top: 0; left: 0; height: 100vh; flex-shrink: 0; }\n        .logo { margin-bottom: 40px; text-align: center; }\n        .logo img { width: 180px; height: auto; }\n        .nav-items { width: 100%; margin-top: 20px; }\n        .nav-item { display: flex; align-items: center; width: 100%; padding: 12px 15px; margin-bottom: 10px; border-radius: 8px; color: #06283d; text-decoration: none; transition: background-color 0.3s; }\n        .nav-item.active { background-color: rgba(6, 40, 61, 0.1); font-weight: 500; }\n        .nav-item:hover:not(.active) { background-color: rgba(6, 40, 61, 0.1); }\n        .nav-icon { margin-right: 12px; width: 20px; height: 20px; stroke: #06283d; fill: none; stroke-width: 2; stroke-linecap: round; stroke-linejoin: round; flex-shrink: 0; }\n\n        /* --- Main Content Area Styling Konsisten --- */\n         .main-content {\n             flex: 1;\n             padding: 30px;\n             background-color: #06283d;\n             margin-left: 240px; /* Offset sidebar */\n             overflow-y: auto; /* Biarkan konten scroll jika perlu */\n         }\n\n        /* ... (CSS spesifik Halaman /lingkungan lainnya tetap sama) ... */\n         :root { /* Variabel CSS bisa dipindah ke atas jika mau */\n            --primary-color: #6366f1; --secondary-color: #4f46e5;\n            --background-color: #06283d; --card-background: #dff6ff;\n            --text-primary: #06283d; --text-secondary: #94a3b8;\n            --text-accent: #818cf8; --border-radius: 16px;\n         }\n         .dashboard-title { font-family: 'Poppins', serif; font-size: 45px; font-weight: bold; color: #FFFFFF; text-align: center; margin-bottom: 30px; }\n         .connection-status { font-size: 14px; color: #94a3b8; text-align: center; margin-bottom: 20px; }\n         .connection-status.connected { color: #4ade80; }\n         .connection-status.disconnected { color: #f87171; }\n         .dashboard-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 25px; max-width: 1200px; margin: 0 auto; width: 100%; }\n         .weather-card { background-color: var(--card-background); border-radius: var(--border-radius); padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); display: flex; flex-direction: column; transition: transform 0.3s ease, box-shadow 0.3s ease; color: #000000; }\n         .weather-card:hover { transform: translateY(-5px); box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2); }\n         .card-header { display: flex; align-items: center; margin-bottom: 15px; color: #000000; }\n         .card-header i { font-size: 1.5rem; margin-right: 10px; } /* Ikon FA */\n         .card-title { font-size: 1.2rem; font-weight: 500; }\n         .card-value { font-size: 3rem; font-weight: 700; margin: 10px 0; text-align: center; }\n         .card-status { font-size: 1rem; color: #000000; text-align: center; margin-bottom: 15px; }\n         .card-range { display: flex; justify-content: space-between; font-size: 0.8rem; color: #000000; margin-top: auto; }\n         .status-indicator { height: 4px; width: 100%; background-color: #334155; border-radius: 2px; margin: 10px 0; position: relative; overflow: hidden; }\n         .status-indicator::after { content: ''; position: absolute; height: 100%; left: 0; top: 0; background: linear-gradient(90deg, #4ade80, #facc15, #f87171); border-radius: 2px; width: var(--indicator-width, 50%); }\n         .status-good { color: #4ade80; } .status-moderate { color: #facc15; } .status-bad { color: #f87171; }\n         .wind-direction { text-align: center; margin: 10px 0; }\n         .notification-section { margin-top: 40px; width: 100%; max-width: 1200px; margin-left: auto; margin-right: auto; }\n         .notification-title { font-family: 'Poppins', serif; font-size: 30px; font-weight: bold; color: #FFFFFF; margin-bottom: 20px; }\n         .notification-container { background-color: var(--card-background); border-radius: var(--border-radius); padding: 15px 20px; margin-bottom: 15px; display: flex; justify-content: space-between; align-items: center; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); }\n         .notification-content { display: flex; align-items: center; }\n         .notification-icon { margin-right: 15px; font-size: 1.5rem; color: var(--text-primary); } /* Ikon FA */\n         .notification-text { font-size: 1rem; color: var(--text-primary); }\n         .notification-time { font-size: 0.9rem; color: var(--text-secondary); }\n\n        /* --- Responsive Styling Konsisten --- */\n        @media (max-width: 1200px) {\n            .sidebar {\n                position: static; width: 100%; height: auto;\n                flex-direction: row; justify-content: space-between; padding: 15px;\n                overflow-y: visible;\n            }\n            .main-content { margin-left: 0; padding: 20px; }\n            .logo img { width: 120px; }\n            .nav-items { width: auto; margin-top: 0; }\n            .nav-item { margin-right: 5px; margin-bottom: 0; }\n             .dashboard-grid { grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); }\n        }\n        @media (max-width: 768px) {\n             body { flex-direction: column; } /* Tambahkan ini */\n             .logo img { width: 100px; }\n             .nav-items { font-size: 0; }\n             .nav-item span { display: none; }\n             .nav-icon { margin-right: 0; }\n             .nav-item { padding: 8px 10px; }\n              .dashboard-grid { grid-template-columns: 1fr; }\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"dashboard-container\">\n        <!-- Sidebar -->\n        <div class=\"sidebar\">\n            <div class=\"logo\">\n                <img src=\"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Weather%20Station%20Dashboard.jpg-hYlNXdOXcA0yAHPry60kUI7nsy6Z5h.jpeg\" alt=\"CloudNex Logo\">\n            </div>\n\n            <div class=\"nav-items\">\n                <a href=\"/cuaca\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                        <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n                    </svg>\n                    <span>Dashboard</span>\n                </a>\n\n                <a href=\"/lingkungan\" class=\"nav-item active\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"></path>\n                    </svg>\n                    <span>Environmental Monitoring</span>\n                </a>\n\n                <a href=\"/histori\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M3 3v18h18\"></path>\n                        <path d=\"m19 9-5 5-4-4-3 3\"></path>\n                    </svg>\n                    <span>Historical Data</span>\n                </a>\n\n                <a href=\"/about-us\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n                        <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\n                        <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\n                        <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\n                    </svg>\n                    <span>About Us</span>\n                </a>\n            </div>\n        </div>\n\n    <!-- Main Content -->\n    <div class=\"main-content\">\n        <div class=\"dashboard-title\">ENVIRONMENTAL MONITORING</div>\n        <div class=\"dashboard-grid\">\n            <!-- Temperature Card -->\n            <div class=\"weather-card\">\n                <div class=\"card-header\">\n                    <i class=\"fas fa-temperature-high\"></i>\n                    <div class=\"card-title\">Temperature</div>\n                </div>\n                <div class=\"card-value\" id=\"temperature\">29 °C</div>\n                <div class=\"card-status\" id=\"temperature-status\">Sejuk</div>\n                <div class=\"status-indicator\" id=\"temperature-indicator\"></div>\n                <div class=\"card-range\">\n                    <span>Min: 0 °C</span>\n                    <span>Max: 35 °C</span>\n                </div>\n            </div>\n\n            <!-- Humidity Card -->\n            <div class=\"weather-card\">\n                <div class=\"card-header\">\n                    <i class=\"fas fa-droplet\"></i>\n                    <div class=\"card-title\">Humidity</div>\n                </div>\n                <div class=\"card-value\" id=\"humidity\">74.9 %</div>\n                <div class=\"card-status\" id=\"humidity-status\">Lembap</div>\n                <div class=\"status-indicator\" id=\"humidity-indicator\"></div>\n                <div class=\"card-range\">\n                    <span>Min: 0 %</span>\n                    <span>Max: 100 %</span>\n                </div>\n            </div>\n\n            <!-- Pressure Card -->\n            <div class=\"weather-card\">\n                <div class=\"card-header\">\n                    <i class=\"fas fa-gauge-high\"></i>\n                    <div class=\"card-title\">Pressure</div>\n                </div>\n                <div class=\"card-value\" id=\"pressure\">1002 hPa</div>\n                <div class=\"card-status\" id=\"pressure-status\">Tinggi</div>\n                <div class=\"status-indicator\" id=\"pressure-indicator\"></div>\n                <div class=\"card-range\">\n                    <span>Min: 950 hPa</span>\n                    <span>Max: 1050 hPa</span>\n                </div>\n            </div>\n\n            <!-- Air Particle Card -->\n            <div class=\"weather-card\">\n                <div class=\"card-header\">\n                    <i class=\"fas fa-smog\"></i>\n                    <div class=\"card-title\">Air Particle</div>\n                </div>\n                <div class=\"card-value\" id=\"airParticle\">29 µg/m³</div>\n                <div class=\"card-status\" id=\"airParticle-status\">Baik</div>\n                <div class=\"status-indicator\" id=\"airParticle-indicator\"></div>\n                <div class=\"card-range\">\n                    <span>Min: 0 µg/m³</span>\n                    <span>Max: 250 µg/m³</span>\n                </div>\n            </div>\n\n            <!-- Wind Speed Card -->\n            <div class=\"weather-card\">\n                <div class=\"card-header\">\n                    <i class=\"fas fa-wind\"></i>\n                    <div class=\"card-title\">Wind Speed</div>\n                </div>\n                <div class=\"card-value\" id=\"windSpeed\">15 km/h</div>\n                <div class=\"card-status\" id=\"windSpeed-status\">Lemah</div>\n                <div class=\"status-indicator\" id=\"windSpeed-indicator\"></div>\n                <div class=\"card-range\">\n                    <span>Min: 0 km/h</span>\n                    <span>Max: 60 km/h</span>\n                </div>\n            </div>\n\n            <!-- Wind Direction Card -->\n            <div class=\"weather-card\">\n                <div class=\"card-header\">\n                    <i class=\"fas fa-compass\"></i>\n                    <div class=\"card-title\">Wind Direction</div>\n                </div>\n                <div class=\"card-value\" id=\"windDirection\">225 °</div>\n                <div class=\"card-status\" id=\"windDirection-status\">Southwest</div>\n                <div class=\"wind-direction\">\n                    <i class=\"fas fa-arrow-up\" id=\"windDirection-arrow\" style=\"font-size: 2rem;\"></i>\n                </div>\n                <div class=\"card-range\">\n                    <span>Min: 0 °</span>\n                    <span>Max: 360 °</span>\n                </div>\n            </div>\n\n            <!-- Rain Status Card -->\n            <div class=\"weather-card\">\n                <div class=\"card-header\">\n                    <i class=\"fas fa-cloud-rain\"></i>\n                    <div class=\"card-title\">Rain Status</div>\n                </div>\n                <div class=\"card-value\" id=\"rainStatus\">\n                    <i class=\"fas fa-sun\" id=\"rainStatus-icon\"></i>\n                    Not Detected\n                </div>\n                <div class=\"card-status\" id=\"rainStatus-status\">Tidak Hujan</div>\n                <div class=\"card-range\">\n                    <span>Detected</span>\n                    <span>Not Detected</span>\n                </div>\n            </div>\n        </div>\n\n        <!-- Notification Section -->\n        <div class=\"notification-section\">\n            <div class=\"notification-title\">Notifications</div>\n            <div id=\"notification-container\">\n                {{#notifications}}\n                <div class=\"notification-container\">\n                    <div class=\"notification-content\">\n                        <i class=\"notification-icon {{icon}}\"></i>\n                        <div class=\"notification-text\">{{message}}</div>\n                    </div>\n                    <div class=\"notification-time\">{{time}}</div>\n                </div>\n                {{/notifications}}\n                {{^notifications}}\n                <div class=\"notification-container\">\n                    <div class=\"notification-content\">\n                        <i class=\"notification-icon fa fa-info-circle\"></i>\n                        <div class=\"notification-text\">No new notifications</div>\n                    </div>\n                    <div class=\"notification-time\">--:--</div>\n                </div>\n                {{/notifications}}\n            </div>\n        </div>\n    </div>\n\n    <script src=\"https://unpkg.com/mqtt@5.3.2/dist/mqtt.min.js\"></script>\n    <script>\n        // --- Utility Functions ---\n        /**\n         * Formats a numeric value with specified decimals and unit.\n         * @param {number} value - The value to format.\n         * @param {number} decimals - Number of decimal places.\n         * @param {string} unit - Unit to append.\n         * @param {string} defaultValue - Fallback if value is invalid.\n         * @returns {string} Formatted string.\n         */\n        function formatValue(value, decimals = 1, unit = '', defaultValue = '--') {\n            const num = parseFloat(value);\n            if (isNaN(num) || value === null || value === undefined) {\n                return `${defaultValue} ${unit}`.trim();\n            }\n            return `${num.toFixed(decimals)} ${unit}`.trim();\n        }\n        function updateNotifications(notifications) {\n            const container = document.getElementById('notification-container');\n            if (!container) return;\n\n            container.innerHTML = '';\n\n            if (notifications && notifications.length > 0) {\n                notifications.forEach(notification => {\n                    const div = document.createElement('div');\n                    div.className = 'notification-container';\n                    div.innerHTML = `\n                        <div class=\"notification-content\">\n                            <i class=\"notification-icon ${notification.icon}\"></i>\n                            <div class=\"notification-text\">${notification.message}</div>\n                        </div>\n                        <div class=\"notification-time\">${notification.time}</div>\n                    `;\n                    container.appendChild(div);\n                });\n            } else {\n                container.innerHTML = `\n                    <div class=\"notification-container\">\n                        <div class=\"notification-content\">\n                            <i class=\"notification-icon fa fa-info-circle\"></i>\n                            <div class=\"notification-text\">No new notifications</div>\n                        </div>\n                        <div class=\"notification-time\">--:--</div>\n                    </div>\n                `;\n            }\n        }\n\n        /**\n         * Updates weather cards and notifications based on MQTT data.\n         * @param {Object} data - Weather data from MQTT.\n         */\n        function updateWeatherData(data) {\n            // Update temperature\n            document.getElementById('temperature').textContent = formatValue(data.temperature, 1, '°C');\n            let tempStatus = '', tempColor = '', tempWidth = 0;\n            if (!data.temperature || data.temperature < 18) {\n                tempStatus = 'Dingin Ekstrem'; tempColor = 'status-good'; tempWidth = 10;\n            } else if (data.temperature <= 22) {\n                tempStatus = 'Dingin'; tempColor = 'status-good'; tempWidth = 30;\n            } else if (data.temperature <= 27) {\n                tempStatus = 'Sejuk - Nyaman'; tempColor = 'status-good'; tempWidth = 50;\n            } else if (data.temperature <= 31) {\n                tempStatus = 'Hangat'; tempColor = 'status-moderate'; tempWidth = 65;\n            } else if (data.temperature <= 35) {\n                tempStatus = 'Panas'; tempColor = 'status-bad'; tempWidth = 80;\n            } else {\n                tempStatus = 'Sangat Panas'; tempColor = 'status-bad'; tempWidth = 90;\n            }\n            document.getElementById('temperature-status').textContent = tempStatus;\n            document.getElementById('temperature-status').className = 'card-status ' + tempColor;\n            document.getElementById('temperature-indicator').style.setProperty('--indicator-width', `${tempWidth}%`);\n\n            // Update humidity\n            document.getElementById('humidity').textContent = formatValue(data.humidity, 1, '%');\n            let humidityStatus = '', humidityColor = '', humidityWidth = data.humidity || 0;\n            if (!data.humidity || data.humidity < 30) {\n                humidityStatus = 'Kering'; humidityColor = 'status-good';\n            } else if (data.humidity <= 60) {\n                humidityStatus = 'Nyaman'; humidityColor = 'status-good';\n            } else {\n                humidityStatus = 'Lembap'; humidityColor = 'status-bad';\n            }\n            document.getElementById('humidity-status').textContent = humidityStatus;\n            document.getElementById('humidity-status').className = 'card-status ' + humidityColor;\n            document.getElementById('humidity-indicator').style.setProperty('--indicator-width', `${humidityWidth}%`);\n\n            // Update pressure\n            const pressureInHpa = data.pressure ? parseFloat(data.pressure) : null;\n            document.getElementById('pressure').textContent = formatValue(pressureInHpa, 1, 'hPa');\n            let pressureStatus = '', pressureColor = '', pressureWidth = pressureInHpa ? ((pressureInHpa - 950) / (1050 - 950)) * 100 : 0;\n            if (pressureInHpa >= 1000 && pressureInHpa <= 1015) {\n                pressureStatus = 'Normal'; pressureColor = 'status-good';\n            } else {\n                pressureStatus = pressureInHpa < 1000 ? 'Rendah' : 'Tinggi'; pressureColor = 'status-moderate';\n            }\n            document.getElementById('pressure-status').textContent = pressureStatus;\n            document.getElementById('pressure-status').className = 'card-status ' + pressureColor;\n            document.getElementById('pressure-indicator').style.setProperty('--indicator-width', `${pressureWidth}%`);\n\n            // Update air particle (PM2.5)\n            document.getElementById('airParticle').textContent = formatValue(data.pm25, 1, 'µg/m³');\n            let airParticleStatus = '', airParticleColor = '', airParticleWidth = data.pm25 ? (data.pm25 / 250) * 100 : 0;\n            if (!data.pm25 || data.pm25 <= 50) {\n                airParticleStatus = 'Baik'; airParticleColor = 'status-good';\n            } else if (data.pm25 <= 100) {\n                airParticleStatus = 'Sedang'; airParticleColor = 'status-moderate';\n            } else {\n                airParticleStatus = 'Buruk'; airParticleColor = 'status-bad';\n            }\n            document.getElementById('airParticle-status').textContent = airParticleStatus;\n            document.getElementById('airParticle-status').className = 'card-status ' + airParticleColor;\n            document.getElementById('airParticle-indicator').style.setProperty('--indicator-width', `${airParticleWidth}%`);\n\n            // Update wind speed\n            const windSpeedKmh = data.wind_speed_mps ? (data.wind_speed_mps * 3.6).toFixed(1) : null;\n            document.getElementById('windSpeed').textContent = formatValue(windSpeedKmh, 1, 'km/h');\n            let windSpeedStatus = '', windSpeedColor = '', windSpeedWidth = windSpeedKmh ? (windSpeedKmh / 60) * 100 : 0;\n            if (!windSpeedKmh || windSpeedKmh < 20) {\n                windSpeedStatus = 'Lemah'; windSpeedColor = 'status-good';\n            } else if (windSpeedKmh < 40) {\n                windSpeedStatus = 'Sedang'; windSpeedColor = 'status-moderate';\n            } else {\n                windSpeedStatus = 'Kuat'; windSpeedColor = 'status-bad';\n            }\n            document.getElementById('windSpeed-status').textContent = windSpeedStatus;\n            document.getElementById('windSpeed-status').className = 'card-status ' + windSpeedColor;\n            document.getElementById('windSpeed-indicator').style.setProperty('--indicator-width', `${windSpeedWidth}%`);\n\n            // Update wind direction\n            document.getElementById('windDirection').textContent = formatValue(data.wind_direction, 1, '°');\n            let directionText = '--';\n            if (data.wind_direction != null) {\n                if (data.wind_direction >= 337.5 || data.wind_direction < 22.5) directionText = 'Utara';\n                else if (data.wind_direction < 67.5) directionText = 'Timur Laut';\n                else if (data.wind_direction < 112.5) directionText = 'Timur';\n                else if (data.wind_direction < 157.5) directionText = 'Tenggara';\n                else if (data.wind_direction < 202.5) directionText = 'Selatan';\n                else if (data.wind_direction < 247.5) directionText = 'Barat Daya';\n                else if (data.wind_direction < 292.5) directionText = 'Barat';\n                else directionText = 'Barat Laut';\n                document.getElementById('windDirection-arrow').style.transform = `rotate(${data.wind_direction}deg)`;\n            }\n            document.getElementById('windDirection-status').textContent = directionText;\n\n            // Update rain status\n            const rainValue = data.rain_value;\n            const rainStatusElement = document.getElementById('rainStatus');\n            const rainStatusIcon = document.getElementById('rainStatus-icon');\n            const rainStatusTextElement = document.getElementById('rainStatus-status');\n            let rainStatusText = '', rainStatusColor = '', rainIconClass = '';\n            if (rainValue === null || rainValue === undefined || rainValue > 2500) {\n                rainStatusText = 'Tidak Hujan';\n                rainStatusColor = 'status-good';\n                rainIconClass = 'fas fa-sun';\n                rainStatusElement.innerHTML = `<i class=\"${rainIconClass}\" id=\"rainStatus-icon\"></i>Not Detected`;\n            } else if (rainValue >= 0 && rainValue <= 2500) {\n                rainStatusText = 'Hujan';\n                rainStatusColor = 'status-moderate';\n                rainIconClass = 'fas fa-cloud-rain';\n                rainStatusElement.innerHTML = `<i class=\"${rainIconClass}\" id=\"rainStatus-icon\"></i>Detected`;\n            }\n            rainStatusTextElement.textContent = rainStatusText;\n            rainStatusTextElement.className = 'card-status ' + rainStatusColor;\n\n            // Generate notifications based on data\n            const notifications = [];\n            const time = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n            if (data.temperature && data.temperature > 20) {\n                notifications.push({\n                    message: `Suhu ${data.temperature.toFixed(1)}°C, harap hindari aktivitas fisik berlebihan di luar ruangan`,\n                    icon: 'fas fa-temperature-high',\n                    time: time\n                });\n            }\n            if (data.humidity && data.humidity > 90) {\n                notifications.push({\n                    message: `Kelembapan tinggi ${data.humidity.toFixed(1)}%, pastikan tubuh tetap terhidrasi`,\n                    icon: 'fas fa-droplet',\n                    time: time\n                });\n            }\n            if (rainValue !== null && rainValue !== undefined && rainValue >= 0 && rainValue <= 2500) {\n                notifications.push({\n                    message: `Hujan terdeteksi, siapkan jas hujan atau payung`,\n                    icon: 'fas fa-cloud-rain',\n                    time: time\n                });\n            }\n            if (data.pm25 && data.pm25 > 100) {\n                notifications.push({\n                    message: `PM25 tinggi ${data.pm25.toFixed(1)} µg/m³, disarankan memakai masker saat beraktivitas`,\n                    icon: 'fas fa-smog',\n                    time: time\n                });\n            }\n\n            // Update notifications\n            updateNotifications(notifications);\n        }\n\n        // --- MQTT Client Setup ---\n        const mqttBroker = 'mqtt://10.10.169.249:1883';\n        const mqttTopic = 'weather/station_data';\n        const clientId = 'weather_dashboard_' + Math.random().toString(16).slice(3);\n        let client;\n        let connectionAttempts = 0;\n        const maxConnectionAttempts = 5;\n\n        /**\n         * Establishes MQTT connection with exponential backoff on failure.\n         */\n        function connectMQTT() {\n            if (connectionAttempts >= maxConnectionAttempts) {\n                console.error(`Failed to connect after ${maxConnectionAttempts} attempts.`);\n                updateWeatherData({\n                    temperature: 29,\n                    humidity: 74.9,\n                    pressure: 1002,\n                    pm25: 29,\n                    wind_speed_mps: 4.17,\n                    wind_direction: 225,\n                    rain_value: 3000 // Default to Not Detected\n                });\n                document.querySelectorAll('.card-value').forEach(el => {\n                    el.style.color = '#7986cb';\n                });\n                return;\n            }\n\n            try {\n                console.log(`Connecting to MQTT broker (attempt ${connectionAttempts + 1})...`);\n\n                client = mqtt.connect(mqttBroker, {\n                    clientId: clientId,\n                    protocolVersion: 4,\n                    reconnectPeriod: 0, // Manual reconnection handling\n                    keepalive: 60,\n                    connectTimeout: 10000\n                });\n\n                client.on('connect', () => {\n                    console.log('Connected to MQTT broker');\n                    connectionAttempts = 0;\n\n\n                    client.subscribe(mqttTopic, { qos: 2 }, (err) => {\n                        if (err) {\n                            console.error('Subscription error:', err);\n                        } else {\n                            console.log(`Subscribed to ${mqttTopic}`);\n                        }\n                    });\n                });\n\n                client.on('message', (topic, message) => {\n                    console.log(`Received message on topic: ${topic}`);\n                    try {\n                        const data = JSON.parse(message.toString());\n                        console.log('Parsed data:', data);\n                        localStorage.setItem('weatherData', JSON.stringify(data));\n                        updateWeatherData(data);\n                    } catch (error) {\n                        console.error('Error processing MQTT message:', error);\n                    }\n                });\n\n                client.on('error', (err) => {\n                    console.error('MQTT error:', err);\n                    connectionAttempts++;\n                    setTimeout(connectMQTT, Math.pow(2, connectionAttempts) * 1000); // Exponential backoff\n                });\n\n                client.on('close', () => {\n                    console.log('Disconnected from MQTT broker');\n                });\n\n                client.on('reconnect', () => {\n                    console.log('Attempting to reconnect to MQTT broker...');\n                });\n            } catch (error) {\n                console.error('Error setting up MQTT client:', error);\n                connectionAttempts++;\n                setTimeout(connectMQTT, Math.pow(2, connectionAttempts) * 1000);\n            }\n        }\n\n        // Initialize on page load\n        document.addEventListener('DOMContentLoaded', () => {\n            const storedData = localStorage.getItem('weatherData');\n            if (storedData) {\n                try {\n                    const data = JSON.parse(storedData);\n                    updateWeatherData(data);\n                } catch (error) {\n                    console.error('Error loading data from localStorage:', error);\n                }\n            }\n            connectMQTT();\n        });\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 930,
        "y": 340,
        "wires": [
            [
                "316bcf778277eb67"
            ]
        ]
    },
    {
        "id": "316bcf778277eb67",
        "type": "http response",
        "z": "2d027d09fe0e5b17",
        "name": "Send HTTP Response",
        "statusCode": "",
        "headers": {},
        "x": 1200,
        "y": 340,
        "wires": []
    },
    {
        "id": "aada84843fdfc57f",
        "type": "debug",
        "z": "2d027d09fe0e5b17",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 500,
        "wires": []
    },
    {
        "id": "cf4b3820f05063e0",
        "type": "template",
        "z": "2d027d09fe0e5b17",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>About Us - CloudNex</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap\"\n        rel=\"stylesheet\">\n\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Poppins', sans-serif;\n        }\n\n        body {\n            background-color: #06283d;\n            color: #ffffff;\n            overflow-x: hidden;\n            display: flex;\n            min-height: 100vh;\n        }\n\n        .sidebar {\n            width: 240px;\n            background-color: #dff6ff;\n            padding: 20px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            flex-shrink: 0;\n            position: fixed;\n            top: 0;\n            left: 0;\n            height: 100vh;\n            overflow-y: auto;\n        }\n\n        .logo {\n            margin-bottom: 40px;\n            text-align: center;\n        }\n\n        .logo img {\n            width: 180px;\n            height: auto;\n        }\n\n        .nav-items {\n            width: 100%;\n            margin-top: 20px;\n        }\n\n        .nav-item {\n            display: flex;\n            align-items: center;\n            width: 100%;\n            padding: 12px 15px;\n            margin-bottom: 10px;\n            border-radius: 8px;\n            color: #06283d;\n            text-decoration: none;\n            transition: background-color 0.3s;\n        }\n\n        .nav-item i {\n            margin-right: 12px;\n            font-size: 18px;\n            width: 20px;\n            text-align: center;\n        }\n\n        .nav-icon {\n            margin-right: 12px;\n            width: 20px;\n            height: 20px;\n            stroke: #06283d;\n            fill: none;\n            stroke-width: 2;\n            stroke-linecap: round;\n            stroke-linejoin: round;\n            flex-shrink: 0;\n        }\n\n        .nav-item:hover:not(.active) {\n            background-color: rgba(6, 40, 61, 0.1);\n        }\n\n        .nav-item.active {\n            background-color: rgba(10, 49, 66, 0.1);\n            font-weight: 500;\n        }\n\n        .main-content {\n            flex: 1;\n            padding: 30px;\n            background-color: #06283d;\n            color: white;\n            overflow-y: auto;\n            margin-left: 240px;\n        }\n\n        .main-content h1 {\n            font-size: 36px;\n            font-weight: 700;\n            margin-bottom: 40px;\n            text-align: center;\n            text-transform: uppercase;\n        }\n\n        .team-grid {\n            display: grid;\n            grid-template-columns: repeat(4, 1fr);\n            gap: 30px;\n            margin-bottom: 50px;\n        }\n\n        .team-card {\n            background-color: #dff6ff;\n            border-radius: 12px;\n            overflow: hidden;\n            text-align: center;\n            color: #06283d;\n            padding-bottom: 20px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n            transition: transform 0.3s ease;\n        }\n\n        .team-card:hover {\n            transform: translateY(-5px);\n        }\n\n        .team-card img {\n            display: block;\n            width: 100%;\n            height: 280px;\n            object-fit: cover;\n            filter: grayscale(100%);\n            transition: filter 0.3s ease;\n        }\n\n        .team-card:hover img {\n            filter: grayscale(0%);\n        }\n\n        .team-card h3 {\n            font-size: 18px;\n            font-weight: 600;\n            margin-top: 15px;\n            margin-bottom: 5px;\n        }\n\n        .team-card p {\n            font-size: 14px;\n            color: #555;\n            margin-bottom: 0;\n            padding: 0 10px;\n        }\n\n        .team-card h3::after {\n            content: '';\n            display: block;\n            width: 50px;\n            height: 2px;\n            background-color: rgba(6, 40, 61, 0.3);\n            margin: 8px auto 0;\n        }\n\n        .team-card .linkedin-link {\n            display: inline-block;\n            margin-top: 10px;\n            color: #0077b5;\n            text-decoration: none;\n            font-size: 14px;\n            transition: color 0.3s ease;\n        }\n\n        .team-card .linkedin-link i {\n            margin-right: 5px;\n            font-size: 16px;\n        }\n\n        .team-card .linkedin-link:hover {\n            color: #005582;\n        }\n\n        .info-grid {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 30px;\n            max-width: 900px;\n            margin: 0 auto;\n        }\n\n        .info-box {\n            background-color: #dff6ff;\n            border-radius: 12px;\n            padding: 25px;\n            display: flex;\n            align-items: center;\n            gap: 20px;\n            color: #06283d;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n        }\n\n        .info-box img.logo-info {\n            width: 60px;\n            height: auto;\n            flex-shrink: 0;\n        }\n\n        .info-text h4 {\n            font-size: 16px;\n            font-weight: 600;\n            margin-bottom: 5px;\n        }\n\n        .info-text p {\n            font-size: 14px;\n            color: #333;\n            margin-bottom: 8px;\n            line-height: 1.5;\n        }\n\n        .info-text p a {\n            color: #007bff;\n            text-decoration: none;\n        }\n\n        .info-text p a:hover {\n            text-decoration: underline;\n        }\n\n        .info-text .source-link {\n            font-size: 12px;\n            color: #555;\n            display: flex;\n            align-items: center;\n            gap: 5px;\n        }\n\n        .info-text .source-link img {\n            width: 16px;\n            height: 16px;\n        }\n\n        @media (max-width: 1200px) {\n            .team-grid {\n                grid-template-columns: repeat(2, 1fr);\n            }\n            .info-grid {\n                grid-template-columns: 1fr;\n                max-width: 600px;\n            }\n        }\n\n        @media (max-width: 768px) {\n            body {\n                flex-direction: column;\n                min-height: 100vh;\n            }\n            .sidebar {\n                position: static;\n                width: 100%;\n                flex-direction: row;\n                justify-content: space-between;\n                padding: 10px 15px;\n                height: auto;\n                align-items: center;\n            }\n            .main-content {\n                margin-left: 0;\n                padding: 20px;\n            }\n            .logo {\n                margin-bottom: 0;\n                flex-shrink: 0;\n            }\n            .logo img {\n                width: 80px;\n            }\n            .nav-items {\n                display: flex;\n                width: auto;\n                margin-top: 0;\n                justify-content: flex-end;\n            }\n            .nav-item {\n                margin-bottom: 0;\n                margin-left: 5px;\n                padding: 8px 10px;\n            }\n            .nav-item span {\n                display: none;\n            }\n            .nav-item i,\n            .nav-icon {\n                margin-right: 0;\n            }\n            .main-content h1 {\n                font-size: 28px;\n                margin-bottom: 30px;\n            }\n            .team-grid {\n                grid-template-columns: 1fr;\n                gap: 25px;\n            }\n            .team-card img {\n                height: 250px;\n            }\n            .info-grid {\n                grid-template-columns: 1fr;\n                max-width: 100%;\n            }\n            .info-box {\n                flex-direction: column;\n                text-align: center;\n                gap: 15px;\n            }\n            .info-box img.logo-info {\n                margin-bottom: 10px;\n            }\n            .team-card .linkedin-link {\n                font-size: 13px;\n            }\n        }\n\n        @media (max-width: 480px) {\n            .main-content h1 {\n                font-size: 24px;\n            }\n            .team-card h3 {\n                font-size: 16px;\n            }\n            .team-card p {\n                font-size: 13px;\n            }\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"dashboard-container\">\n        <!-- Sidebar -->\n        <div class=\"sidebar\">\n            <div class=\"logo\">\n                <img src=\"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Weather%20Station%20Dashboard.jpg-hYlNXdOXcA0yAHPry60kUI7nsy6Z5h.jpeg\" alt=\"CloudNex Logo\">\n            </div>\n\n            <div class=\"nav-items\">\n                <a href=\"/cuaca\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                        <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n                    </svg>\n                    <span>Dashboard</span>\n                </a>\n\n                <a href=\"/lingkungan\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"></path>\n                    </svg>\n                    <span>Environmental Monitoring</span>\n                </a>\n\n                <a href=\"/histori\" class=\"nav-item\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M3 3v18h18\"></path>\n                        <path d=\"m19 9-5 5-4-4-3 3\"></path>\n                    </svg>\n                    <span>Historical Data</span>\n                </a>\n\n                <a href=\"/about-us\" class=\"nav-item active\">\n                    <svg class=\"nav-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\n                        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n                        <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\n                        <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\n                        <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\n                    </svg>\n                    <span>About Us</span>\n                </a>\n            </div>\n        </div>\n\n    <div class=\"main-content\">\n        <h1>MEET THE TEAM</h1>\n        <div class=\"team-grid\">\n            <div class=\"team-card\">\n                <img src=\"https://i.imgur.com/sE9JtBk.jpeg\" alt=\"Foto Aprio Adam T.\">\n                <h3>APRIO ADAM T.</h3>\n                <p>Project Manager</p>\n                <a href=\"https://www.linkedin.com/in/aprioadamtriansyah/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"linkedin-link\">\n                    <i class=\"fab fa-linkedin\"></i> LinkedIn\n                </a>\n            </div>\n            <div class=\"team-card\">\n                <img src=\"https://i.imgur.com/Zf3rAeo.png\" alt=\"Foto Delima Ester Purba\">\n                <h3>DELIMA ESTER PURBA</h3>\n                <p>Software Developer</p>\n                <a href=\"https://www.linkedin.com/in/delima-ester-purba/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"linkedin-link\">\n                    <i class=\"fab fa-linkedin\"></i> LinkedIn\n                </a>\n            </div>\n            <div class=\"team-card\">\n                <img src=\"https://i.imgur.com/VX8gLx7.jpeg\" alt=\"Foto Lutfi Mawardi\">\n                <h3>LUTFI MAWARDI</h3>\n                <p>Hardware Developer</p>\n                <a href=\"https://linktr.ee/lutfimawardi\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"linkedin-link\">\n                    <i class=\"fab fa-linkedin\"></i> LinkedIn\n                </a>\n            </div>\n            <div class=\"team-card\">\n                <img src=\"https://i.imgur.com/5BawbEe.jpeg\" alt=\"Foto Bernardus Patrick\">\n                <h3>BERNARDUS PATRICK</h3>\n                <p>Data Analyst</p>\n                <a href=\"https://www.linkedin.com/in/bernardus-patrick-sachio-b35369258/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"linkedin-link\">\n                    <i class=\"fab fa-linkedin\"></i> LinkedIn\n                </a>\n            </div>\n        </div>\n        <div class=\"info-grid\">\n            <div class=\"info-box\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/id/5/54/Logo_Universitas_Prasetiya_Mulya.png\" alt=\"Logo Universitas Prasetiya Mulya\" class=\"logo-info\">\n                <div class=\"info-text\">\n                    <h4>Jurusan S1 Teknik Sistem Komputer</h4>\n                    <p>Jurusan kuliah S1 Teknik Sistem Komputer di Prasetiya Mulya menawarkan pembelajaran kolaboratif dalam bidang teknologi sistem komputer.</p>\n                    <p class=\"source-link\">\n                        <i class=\"fas fa-university\"></i>\n                        <a href=\"https://stem.prasetiyamulya.ac.id/programs/s1-computer-systems-engineering/\" target=\"_blank\" rel=\"noopener noreferrer\">Lihat Program Studi</a>\n                    </p>\n                </div>\n            </div>\n            <div class=\"info-box\">\n                <img src=\"https://i.imgur.com/lAHbiKZ.png\" alt=\"Logo CSE\" class=\"logo-info\">\n                <div class=\"info-text\">\n                    <h4>Instagram (@cse.prasmul)</h4>\n                    <p>Ikuti kami untuk foto dan video terbaru dari CSE Prasetiya Mulya.</p>\n                    <p class=\"source-link\">\n                        <i class=\"fab fa-instagram\"></i>\n                        <a href=\"https://www.instagram.com/cse.prasmul/\" target=\"_blank\" rel=\"noopener noreferrer\">Kunjungi Instagram</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n</html>",
        "output": "str",
        "x": 800,
        "y": 640,
        "wires": [
            [
                "6c4d3baef6a4f510"
            ]
        ]
    },
    {
        "id": "f8a27213b0b17d5a",
        "type": "http in",
        "z": "2d027d09fe0e5b17",
        "name": "",
        "url": "/about-us",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 630,
        "y": 640,
        "wires": [
            [
                "cf4b3820f05063e0"
            ]
        ]
    },
    {
        "id": "6c4d3baef6a4f510",
        "type": "http response",
        "z": "2d027d09fe0e5b17",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 640,
        "wires": []
    },
    {
        "id": "1498bfb91f583e3e",
        "type": "mqtt-broker",
        "name": "Server",
        "broker": "10.10.169.249",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7e3e0898da3593ac",
        "type": "websocket-listener",
        "path": "/ws/weather",
        "wholemsg": "false"
    }
]